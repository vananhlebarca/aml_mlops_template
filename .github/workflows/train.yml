# Actions train a model on Azure Machine Learning
name: aml-train-deploy
on: #[pull_request]
  push:
    branches:
      - master
      - dev
    paths:
      - ".github/workflows/**"
      - "code/**"
jobs:
  train-deploy:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check Out Repository
        id: checkout_repository
        uses: actions/checkout@v2

      # Connect or Create the Azure Machine Learning Workspace
      - name: Connect/Create Azure Machine Learning Workspace
        id: aml_workspace
        uses: Azure/aml-workspace@v1
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}

      # Connect or Create a Compute Target in Azure Machine Learning
      - name: Connect/Create Azure Machine Learning Compute Target
        id: aml_compute_training
        uses: Azure/aml-compute@v1
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}

      # Submit a training run to the Azure Machine Learning
      - name: Submit training run
        id: aml_run
        uses: Azure/aml-run@v1
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}

      # Register model in Azure Machine Learning model registry
      - name: Register model
        id: aml_registermodel
        uses: Azure/aml-registermodel@v1
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
          run_id: ${{ steps.aml_run.outputs.run_id }}
          experiment_name: ${{ steps.aml_run.outputs.experiment_name }}

      # Deploy
      - name: Deploy model
        id: aml_deploy
        uses: Azure/aml-deploy@v1
        with:
          # required inputs
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
          model_name: ${{ steps.aml_registermodel.outputs.model_name }}
          model_version: ${{ steps.aml_registermodel.outputs.model_version }}
          # optional inputs
          #parameters_file: "deploy.json"

      - name: Display Aci Deploy Details
        run: |
          echo scoring-endpoint: ${{ steps.aml_deploy.outputs.service_scoring_uri}}
          echo swagger-uri: ${{ steps.aml_deploy.outputs.service_swagger_uri}}
